<?xml version="1.0" encoding="UTF-8"?>


<!-- ~  Copyright (c) 2014, Stratio, All rights reserved. 
	~ ~ This library is free software; you can redistribute it and/or modify 
	it under the terms of the ~ GNU Lesser General Public License as published 
	by the Free Software Foundation; either version ~ 3.0 of the License, or 
	(at your option) any later version. ~ ~ This library is distributed in the 
	hope that it will be useful, but WITHOUT ANY WARRANTY; without ~ even the 
	implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
	See the GNU ~ Lesser General Public License for more details. ~ ~ You should 
	have received a copy of the GNU Lesser General Public License along with 
	this library. -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.stratio.connector</groupId>
	<artifactId>stratio-connector-streaming-core</artifactId>
	<description>Stratio Streaming connector core</description>
	<url>http://www.stratio.com</url>
	<name>Stratio Streaming Connector core</name>
	<packaging>jar</packaging>
	<parent>
		<groupId>com.stratio.connector</groupId>
		<artifactId>stratio-connector-streaming</artifactId>
		<version>0.5.0-SNAPSHOT</version>
	</parent>
	<dependencies>
		<dependency>
			<groupId>com.stratio.streaming</groupId>
			<artifactId>streaming-api</artifactId>
			<version>${streaming.api.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.datastax.cassandra</groupId>
					<artifactId>cassandra-driver-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.mongodb</groupId>
					<artifactId>mongo-java-driver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.scalamock</groupId>
					<artifactId>scalamock-scalatest-support_2.10</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jboss.netty</groupId>
					<artifactId>netty</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.stratio.connector</groupId>
			<artifactId>stratio-connector-commons-core</artifactId>
			<version>${commons.connector.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.5.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.5.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.stratio.connector</groupId>
			<artifactId>stratio-connector-commons-core</artifactId>
			<classifier>tests</classifier>
			<version>${commons.connector.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>package</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>appassembler-maven-plugin</artifactId>
						<version>1.10</version>
						<executions>
							<execution>
								<id>appassembler</id>
								<phase>package</phase>
								<goals>
									<goal>assemble</goal>
								</goals>
								<configuration>
									<configurationSourceDirectory>src/main/config</configurationSourceDirectory>
									<configurationDirectory>conf</configurationDirectory>
									<copyConfigurationDirectory>true</copyConfigurationDirectory>
									<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
									<assembleDirectory>${project.build.directory}/stratio-connector-streaming</assembleDirectory>
									<extraJvmArguments>$CONNECTOR_STREAMING_OPTS -Djava.net.preferIPv4Stack=true -Dcom.sun.management.jmxremote.port=${jmx.port} -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false</extraJvmArguments>
									<filterConfigurationDirectory>true</filterConfigurationDirectory>
									<platforms>
										<platform>windows</platform>
										<platform>unix</platform>
									</platforms>
									<programs>
										<program>
											<mainClass>com.stratio.connector.streaming.core.StreamingConnector</mainClass>
											<id>stratio-connector-streaming</id>
										</program>
									</programs>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.stratio.mojo.unix</groupId>
						<artifactId>unix-maven-plugin</artifactId>
						<version>1.1.5</version>
						<extensions>true</extensions>
						<inherited>false</inherited>
						<configuration>
							<size>2048</size>
							<outputFileName>stratio-connector-streaming</outputFileName>
							<contact><![CDATA[Stratio <jmgomez@stratio.com>]]></contact>
							<contactEmail>jmgomez@stratio.com</contactEmail>
							<deb>
								<section>devel</section>
							</deb>
							<rpm>
								<group>stratio</group>
								<requires>bash</requires>
							</rpm>
							<name>connector-streaming</name>
							<excludeDirectoryAttributes>
								<dir>/etc</dir>
								<dir>/etc/init.d</dir>
								<dir>/etc/default</dir>
								<dir>/var</dir>
								<dir>/opt</dir>
								<dir>/usr</dir>
								<dir>/bin</dir>
							</excludeDirectoryAttributes>
							<assembly>
								<copyFile>
									<path>src/main/unix/files_and_dirs/etc/init.d/connector-streaming</path>
									<toFile>/etc/init.d/connector-streaming</toFile>
									<attributes>
										<user>root</user>
										<group>root</group>
										<mode>755</mode>
									</attributes>
								</copyFile>
								<copyDirectory>
									<from>target/stratio-connector-streaming/bin</from>
									<to>/opt/sds/connectors/streaming/bin</to>
									<directoryAttributes>
										<user>stratio</user>
										<group>stratio</group>
									</directoryAttributes>
								</copyDirectory>
								<copyDirectory>
									<from>target/stratio-connector-streaming/repo</from>
									<to>/opt/sds/connectors/streaming/repo</to>
									<directoryAttributes>
										<user>stratio</user>
										<group>stratio</group>
									</directoryAttributes>
								</copyDirectory>
								<copyDirectory>
									<from>target/stratio-connector-streaming/conf</from>
									<to>/opt/sds/connectors/streaming/conf</to>
									<directoryAttributes>
										<user>stratio</user>
										<group>stratio</group>
									</directoryAttributes>
								</copyDirectory>
								<copyDirectory>
									<from>src/main/template</from>
									<to>/opt/sds/connectors/streaming/template</to>
									<directoryAttributes>
										<user>stratio</user>
										<group>stratio</group>
									</directoryAttributes>
								</copyDirectory>
								<copyDirectory>
									<from>src/main/unix/files_and_dirs/etc/default</from>
									<to>/etc/default</to>
									<directoryAttributes>
										<user>stratio</user>
										<group>stratio</group>
									</directoryAttributes>
								</copyDirectory>
								<copyFile>
									<path>src/main/include/LICENSE</path>
									<toFile>/opt/sds/connectors/streaming/LICENSE</toFile>
								</copyFile>
								<copyFile>
									<path>src/main/include/NOTICE</path>
									<toFile>/opt/sds/connectors/streaming/NOTICE</toFile>
								</copyFile>
							</assembly>
							<defaults>
								<directoryAttributes>
									<mode>0755</mode>
								</directoryAttributes>
								<fileAttributes>
									<mode>0644</mode>
								</fileAttributes>
							</defaults>
						</configuration>
						<executions>
							<execution>
								<id>deb</id>
								<phase>package</phase>
								<goals>
									<goal>package-deb</goal>
								</goals>
								<configuration>
									<architecture>all</architecture>
								</configuration>
							</execution>
							<execution>
								<id>rpm</id>
								<phase>package</phase>
								<goals>
									<goal>package-rpm</goal>
								</goals>
								<configuration>
									<architecture>noarch</architecture>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
